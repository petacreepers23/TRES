#include "kernel_functions.hpp"
#include "pci.hpp"
#include "../lib/basic_allocator.hpp"







int main() {


	// WriteCharacter('a',3,3,0,0);
	// WriteCharacter('a',3,3,1,0);
	// WriteCharacter('a',3,7,2,0);
	// int a = 0x12345678;
    // unsigned char *c = (unsigned char*)(&a);
    // if (*c == 0x78) {
    //    print((char*)"little-endian",13);
    // } else {
    //    print((char*)"big-endian",10);
    // }
	
	
	// simple_print("ini34567890123456789012345678901234567890123456789012345678901234567890123456789");// 80 elementos.
	// simple_print("a1234567890123456789012345678901234567890123456789012345678901234567890123456789");
	// simple_print("b1234567890123456789012345678901234567890123456789012345678901234567890123456789");
	// simple_print("c1234567890123456789012345678901234567890123456789012345678901234567890123456789");
	// simple_print("d1234567890123456789012345678901234567890123456789012345678901234567890123456789");
	// simple_print("e1234567890123456789012345678901234567890123456789012345678901234567890123456789");
	// simple_print("f1234567890123456789012345678901234567890123456789012345678901234567890123456789");
	// simple_print("g1234567890123456789012345678901234567890123456789012345678901234567890123456789");
	// simple_print("h1234567890123456789012345678901234567890123456789012345678901234567890123456789");
	// simple_print("i1234567890123456789012345678901234567890123456789012345678901234567890123456789");
	// simple_print("j1234567890123456789012345678901234567890123456789012345678901234567890123456789");
	// simple_print("k1234567890123456789012345678901234567890123456789012345678901234567890123456789");
	// simple_print("l1234567890123456789012345678901234567890123456789012345678901234567890123456789");
	// simple_print("m1234567890123456789012345678901234567890123456789012345678901234567890123456789");
	// simple_print("01234567890123456789012345678901234567890123456789012345678901234567890123456789");
	// simple_print("01234567890123456789012345678901234567890123456789012345678901234567890123456789");
	// simple_print("01234567890123456789012345678901234567890123456789012345678901234567890123456789");
	// simple_print("01234567890123456789012345678901234567890123456789012345678901234567890123456789");
	// simple_print("01234567890123456789012345678901234567890123456789012345678901234567890123456789");
	// simple_print("01234567890123456789012345678901234567890123456789012345678901234567890123456789");
	// simple_print("01234567890123456789012345678901234567890123456789012345678901234567890123456789");
	// simple_print("01234567890123456789012345678901234567890123456789012345678901234567890123456789");
	// simple_print("01234567890123456789012345678901234567890123456789012345678901234567890123456789");
	// simple_print("01234567890123456789012345678901234567890123456789012345678901234567890123456789");
	// simple_print("01234567890123456789012345678901234567890123456789012345678901234567890123456Fin");
	// simple_print("nuevo567890123456789012345678901234567890123456789012345678901234567890123456789");
	// simple_print("ultim567890123456789012345678901234567890123456789012345678901234567890123456789");
	// simple_print("01234567890123456789012345678901234567890123456789012345678901234567890123456789");
	//simple_print("01234567890123456789012345678901234567890123456789012345678901234567890123456789");
	//print_pci();
	simple_print("Inicio\n");
	pci* pci_driver = new pci();
	pci_driver->configure_pci_devices();
	//configure_pci_devices();
	


	// delete p;
	// delete pp;
	// pp->print();
	// p->print();
	// prueba* p3 = new prueba(5,6);
	// prueba* p4 = new prueba(7,8);
	// pp->print();
	// p->print();


	// prueba 3:
	// int* array = new int[10];
	// int* array2 = new int[10];
    // array[5] = 9;
	// array2[5]=98;
	// int a = array[5];
	// simple_print(a);
	// simple_print(array2[5]);
    // // Deallocate Heap memory
    // delete[] array;
	// // int* array3 = new int[20];
	// // array3[6]=6;
	// // simple_print(array3[6]);
	// int* array4 = new int[10];
	// array4[5]=12;
	// simple_print(array4[5]);
	// simple_print(array2[5]);

 

	//char *str = malloc(strlen(str)+1);


	// console_clear();
	// simple_print("ashola mundo\n\n123456789\n||\nbuenos\n123456789\n||\nbuenos");
	// simple_print("hola");
	//simple_print("hola2");
	//simple_print("\nabc\n||\nfg");
	// // simple_print("123456789\n||\nbuenos");
	// uint64_t a = 25416584;
	// simple_print(a);
	// simple_print("||");
	// int b = 5;
	// simple_print(-999);
	// simple_print(0);
	// simple_print(a);
	//printNumeric(b);

	// print("otro print",10);
	// print("y otro mas",10);
	stop();
	return 0;
}